// === PADDINGS and MARGINS ===

$directions: (t:top, r:right, b:bottom, l:left);

@mixin paddings-and-margins($start, $stop, $step, $orientations)
{
    $iterator: $start;
    @while $iterator <= $stop {
        .p#{$iterator} {
            padding: $iterator * 1px !important;
        }
        .ptb#{$iterator} {
            padding-top: $iterator * 1px !important;
            padding-bottom: $iterator * 1px !important;
        }
        .plr#{$iterator} {
            padding-left: $iterator * 1px !important;
            padding-right: $iterator * 1px !important;
        }
        @each $orientation-key, $orientation-value in $orientations {
            .p#{$orientation-key}#{$iterator} {
                padding-#{$orientation-value}: $iterator * 1px !important;
            }
        }
        .m#{$iterator} {
            margin: $iterator * 1px !important;
        }
        .mtb#{$iterator} {
            margin-top: $iterator * 1px !important;
            margin-bottom: $iterator * 1px !important;
        }
        .mtba#{$iterator} {
            margin: $iterator * 1px auto !important;
        }
        .mlr#{$iterator} {
            margin-left: $iterator * 1px !important;
            margin-right: $iterator * 1px !important;
        }
        @each $orientation-key, $orientation-value in $orientations {
            .m#{$orientation-key}#{$iterator} {
                margin-#{$orientation-value}: $iterator * 1px !important;
            }
        }
        $iterator: $iterator + $step;
    }
}

@include paddings-and-margins($start: 0, $stop: 10, $step: 1, $orientations: $directions);
@include paddings-and-margins($start: 12, $stop: 20, $step: 2, $orientations: $directions);
@include paddings-and-margins($start: 25, $stop: 60, $step: 5, $orientations: $directions);


// === WIDTHS and HEIGHTS ===

@mixin widths-heights($start, $stop, $step)
{
    $iterator: $start;
    @while $iterator <= $stop {
        .w#{$iterator} {
            width: $iterator * 1px !important;
        }
        .h#{$iterator} {
            height: $iterator * 1px !important;
        }
        $iterator: $iterator + $step;
    }
}

@include widths-heights($start: 0, $stop: 10, $step: 1);
@include widths-heights($start: 12, $stop: 20, $step: 2);
@include widths-heights($start: 25, $stop: 100, $step: 5);
@include widths-heights($start: 110, $stop: 200, $step: 10);
@include widths-heights($start: 220, $stop: 300, $step: 20);
@include widths-heights($start: 350, $stop: 500, $step: 50);
@include widths-heights($start: 600, $stop: 1000, $step: 100);


// === LINE HEIGHTS ===

@mixin line-heights($start, $stop, $step)
{
    $iterator: $start;
    @while $iterator <= $stop {
        .lh#{$iterator} {
            line-height: #{$iterator}unquote('%') !important;
        }
        $iterator: $iterator + $step;
    }
}

@include line-heights($start: 100, $stop: 200, $step: 10);


// === FONT SIZES ===

@mixin font-sizes($start, $stop, $step)
{
    $iterator: $start;
    @while $iterator <= $stop {
        .fs#{$iterator} {
            font-size: $iterator * 1px !important;
        }
        $iterator: $iterator + $step;
    }
}

@include font-sizes($start: 10, $stop: 16, $step: 1);
@include font-sizes($start: 18, $stop: 26, $step: 2);


// === FONT STYLES ===

.fwb {
    font-weight: bold !important;
}
.fwn {
    font-weight: normal !important;
}
.fsi {
    font-style: italic !important;
}


// === FLOATS ===

.fl {
    float: left !important;
}
.fr {
    float: right !important;
}
.fn {
    float: none !important;
}

// === TEXT ALIGNMENTS ===

.tr {
    text-align: right !important;
}
.tl {
    text-align: left !important;
}
.tc {
    text-align: center !important;
}
.tj {
    text-align: justify !important;
}

.tsh {
    text-shadow: 1px 1px rgba(0, 0, 0, 0.7) !important;
}


// === POSITIONS ===

.prel {
    position: relative !important;
}
.pab {
    position: absolute !important;
}


// === DISPLAYS ===

.db {
    display: block !important;
}
.di {
    display: inline !important;
}
.dib {
    display: inline-block !important;
}
.dtc {
    display: table-cell !important;
}

// === TOPS, BOTTOMS, LEFTS & RIGHTS ===

@mixin tops-bottoms-lefts-rights($start, $stop, $step)
{
    $iterator: $start;
    @while $iterator <= $stop {
        .top#{$iterator} {
            top: $iterator * 1px !important;
        }
        .bottom#{$iterator} {
            bottom: $iterator * 1px !important;
        }
        .left#{$iterator} {
            left: $iterator * 1px !important;
        }
        .right#{$iterator} {
            right: $iterator * 1px !important;
        }
        $iterator: $iterator + $step;
    }
}
@include tops-bottoms-lefts-rights($start: 0, $stop: 20, $step: 1);

// === TOOLTIPS ===

.tooltip-custom .tooltip {
    position: absolute;
    z-index: 102000;
    display: block;
    visibility: visible;
    padding: 5px;
    font-size: 11px;
    opacity: 0;
    filter: alpha(opacity=0);
}
.tooltip-custom .tooltip.in {
    opacity: .8;
    filter: alpha(opacity=80);
}
.tooltip-custom .tooltip.top {
    margin-top: -2px;
}
.tooltip-custom .tooltip.right {
    margin-left: 2px;
}
.tooltip-custom .tooltip.bottom {
    margin-top: 2px;
}
.tooltip-custom .tooltip.left {
    margin-left: -2px;
}
.tooltip-custom .tooltip.top .tooltip-arrow {
    bottom: 0;
    left: 50%;
    margin-left: -5px;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 5px solid #000;
}
.tooltip-custom .tooltip.left .tooltip-arrow {
    top: 50%;
    right: 0;
    margin-top: -5px;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 5px solid #000;
}
.tooltip-custom .tooltip.bottom .tooltip-arrow {
    top: 0;
    left: 50%;
    margin-left: -5px;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-bottom: 5px solid #000;
}
.tooltip-custom .tooltip.right .tooltip-arrow {
    top: 50%;
    left: 0;
    margin-top: -5px;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-right: 5px solid #000;
}
.tooltip-custom .tooltip-inner {
    max-width: 200px;
    padding: 4px 10px;
    color: #FFF;
    text-align: center;
    text-decoration: none;
    background-color: #000;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    border-radius: 4px;
}
.tooltip-custom .tooltip-arrow {
    position: absolute;
    width: 0;
    height: 0;
}


// === RESPONSIVE BOOTSTRAP ===

body.xs .xs-hidden,
body.sm .sm-hidden,
body.md .md-hidden,
body.lg .lg-hidden {
    display: none;
}
body:not(.xs) .not-xs-hidden {
    display: none;
}
body:not(.xs):not(.sm) .not-xs-sm-hidden {
    display: none;
}
body:not(.lg) .not-lg-hidden {
    display: none;
}



